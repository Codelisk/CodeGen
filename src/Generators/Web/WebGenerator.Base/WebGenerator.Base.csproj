<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(GeneratorTargetFramework)</TargetFramework>
  </PropertyGroup>

   <PropertyGroup Condition="'$(Configuration)' == 'Release'">
        <IncludeSource>False</IncludeSource>
        <GeneratePackageOnBuild>False</GeneratePackageOnBuild>
        <GenerateDocumentationFile>False</GenerateDocumentationFile>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <PublishRepositoryUrl>False</PublishRepositoryUrl>
        <EmbedUntrackedSources>False</EmbedUntrackedSources>
    </PropertyGroup>
	
  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" />
  </ItemGroup>
	
  <ItemGroup>
    <Folder Include="CodeBuilders\" />
  </ItemGroup>
	
  <ItemGroup>
    <ProjectReference Include="..\..\..\Common\Codelisk.GeneratorAttributes\Codelisk.GeneratorAttributes.csproj" />
    <ProjectReference Include="..\..\..\Common\Codelisk.GeneratorShared\Codelisk.GeneratorShared.csproj" />
    <ProjectReference Include="..\..\..\GeneratorHelper\Foundation.Crawler\Foundation.Crawler.csproj" />
    <ProjectReference Include="..\..\..\GeneratorHelper\Generators.Base\Generators.Base.csproj" />
  </ItemGroup>

  <PropertyGroup>
    <GetTargetPathDependsOn>$(GetTargetPathDependsOn);GetDependencyTargetPaths</GetTargetPathDependsOn>
  </PropertyGroup>

  <Target Name="GetDependencyTargetPaths">
    <ItemGroup>

      <!-- our local project will not generate path variable so we need to find it from it's own build output-->
      <!-- I used $(OutputPath) variable because the dependecy has the exact TFM and configuration as the generator 
               you might need to add configuration manually -->
      <TargetPathWithTargetPlatformMoniker Include="..\..\..\GeneratorHelper\Foundation.Crawler\$(OutputPath)\*.dll" IncludeRuntimeDependency="false" />
    </ItemGroup>
  </Target>

</Project>
