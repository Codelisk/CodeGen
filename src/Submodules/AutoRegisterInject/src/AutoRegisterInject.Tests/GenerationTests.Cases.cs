using Xunit;

namespace AutoRegisterInject.Tests;

public partial class GenerationTests
{
    [Fact]
    public async Task TestCase1()
    {
        const string INPUT = @"
using Microsoft.Extensions.Hosting;
using System.Threading;
using System.Threading.Tasks;
[RegisterHostedService]
public class Foo : IHostedService 
{
    public Task StartAsync(CancellationToken stoppingToken) => throw new System.NotImplementedException();
    public Task StopAsync(CancellationToken stoppingToken) => throw new System.NotImplementedException();
}

[RegisterScoped]
public class Bar { }

[RegisterTransient]
public class Baz { }

[RegisterSingleton]
public class Bang : IBaz { }

public interface IBaz { }
";

        const string EXPECTED = @"// <auto-generated>
//     Automatically generated by AutoRegisterInject.
//     Changes made to this file may be lost and may cause undesirable behaviour.
// </auto-generated>
using Microsoft.Extensions.DependencyInjection;
public static class AutoRegisterInjectServiceCollectionExtension
{
    public static Microsoft.Extensions.DependencyInjection.IServiceCollection AutoRegisterFromTestProject(this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)
    {
        return AutoRegister(serviceCollection);
    }

    internal static Microsoft.Extensions.DependencyInjection.IServiceCollection AutoRegister(this Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection)
    {
        serviceCollection.AddHostedService<Foo>();
serviceCollection.AddScoped<Bar>();
serviceCollection.AddTransient<Baz>();
serviceCollection.AddSingleton<IBaz, Bang>();
        return serviceCollection;
    }
}";

        await RunGenerator(INPUT, EXPECTED);
    }
}